<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!--<context:component-scan base-package="com.darfoo.backend.service" />
    <context:component-scan base-package="com.springapp.mvc" />-->
    <context:component-scan base-package="com.darfoo.backend.service, com.springapp.mvc"/>

    <mvc:annotation-driven/>

    <mvc:default-servlet-handler/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="524288000"/>
        <property name="maxInMemorySize" value="4096"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- 配置线程池 -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="5"/>
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="30000"/>
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="1000"/>
        <!-- 线程池所使用的缓冲队列 -->
        <property name="queueCapacity" value="200"/>
    </bean>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.darfoo.backend.Interceptors.LoginInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.darfoo.backend.Interceptors.HotClickInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.darfoo.backend.Interceptors.CacheInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <task:annotation-driven/>

    <!--不使用bean则不会有定时服务，但是一旦有了bean那么就会一个问题就是到了定时执行的时候会出现两次操作-->
    <!--定时服务后面可以作为定时清理redis，清理session的cronjob-->
    <!--<bean id="reportCurrentTime" class="com.darfoo.backend.utils.ScheduledTasks"/>-->
    <bean id="flushRedisCache" class="com.darfoo.backend.utils.ScheduledTasks"/>

    <!-- 引入同文件夹下的redis属性配置文件 -->
    <!--<import resource="redis-context.xml"/>-->

    <!-- 错误路径和错误页面，注意指定viewResolver -->
    <!--<mvc:view-controller path="/error/404" view-name="404"/>
    <mvc:view-controller path="/error/500" view-name="500"/>
    <mvc:view-controller path="/error/uncaughtException" view-name="uncaughtexception"/>-->
</beans>